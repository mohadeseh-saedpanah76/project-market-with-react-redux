// مکانیزم سبد خرید اینطوریه که اگر محصولی از قبل در سبد خرید باشه محصول جدید در کنار بقیه قرار میگیره
// و اگر سبد خرید خالی باشه سبد خرید از اول با  محصول جدید پر میشه





// // استیت اولیه یک ابجکته که داخل ان سبد خرید ما یک لیستی از محصولاته یعنی ارایه است
export const cartReducer = (state={cartItems : []} , action)=>{
    switch(action.type){
        case 'CART_ADD_ITEM':
            // این کیس برای زمانی است که محصول جدید قراره اضافه بشه به سبد خرید
            // اینجا دو حالت  داریم اینکه اگر از قبل محصولی در سبد خرید باشه محصول جدید کنار اونا میاد
            // و اگر محصولی از قبل در سبد خرید نباشه سبد خرید از اول با محصول جدید ساخته میشه

            const item = action.payload
            // اینجا پی لود مقادیری هستند که می خواهیم از قبل در سبد خرید وجود داشته باشند
            // پس ایتم محصولاتی هستند که از قبل در سبد خرید موجودند
            
            
            // حالا میخواهیم در لیست سبد خرید ببینیم محصولی هست یا نه
            // پس از فایند استفاده میکنیم که خروجی ان تورو یا فالسه
            // پس اگر اگسیزیستینگ تورو بود یعنی محصولات یا ایتم  در سبد خرید هستند
           const existingItem = state.cartItems.find((i)=>{
                return i.product === item.product
                
            })

            // حالا میخواهیم محصول جدید اضافه بشه
            // حالت اول وقتیه که محصولی از قبل در سبد خرید هست
            if(existingItem){
                return{
                    ...state,
                    cartItems: state.cartItems.map((i) =>
                      i.product === existingItem.product ? item : i
                        // فکر کنم میگه اگر محصولی که میخواهی اضافه کنی تو سبد خرید بود هیچی اگرنه اونو بیار به سبد خرید
                    ),
                }
            }
            // حالت دوم وقتیه که محصولی در سبد خرید نیست
            else{
                return{
                    ...state,
                    cartItems : [...state.cartItems , item]
                }
            }
            // همیشه در ردیوسر میگیم هر اکشن چکاری بکنه که اون تغییر روی استیت ها انجام میشه
            case 'CART_REMOVE_ITEM':
                return {
                  ...state,
                //   اکثرا اوقات برای حذف محصولی از ارایه ی سبد خرید از متد فیلتر استفاده میشه
                // تابع فیلتر میاد اون محصولاتی رو که آیدی اونا برابر نیست با آیدی اون محصولی که قراره حذف بشه رو برمیگردونه
                  cartItems: state.cartItems.filter((i) => i.product !== action.payload),
                }
        default : 
        return state
    }
}